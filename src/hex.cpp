#include <hex.h>
#include <stdlib.h>
#include <string.h>

const hex_describer_t described_hexes[] = {
		{.id = 1, .offset_percentage = 0, .invert_order = true, .borders = {-1, 2, 8, 7, 18, 6}, .leds = {498, 270, 269, 268, 267, 266, 265, 264, 263, 262, 497, 288, 287, 286, 285, 284, 283, 282, 281, 280, 279, 278, 277, 276, 275, 274, 273, 272, 271, -1}},
		{.id = 2, .offset_percentage = -10, .invert_order = true, .borders = {3, 10, 9, 8, 1, -1}, .leds = {445, 444, 443, 442, 441, 440, 439, 438, 437, 436, 435, 434, 433, 432, 431, 430, 49, 48, 47, 46, 45, 451, 450, 449, 448, 446, 447, -1}},
		{.id = 3, .offset_percentage = 20, .invert_order = false, .borders = {12, 11, 10, 2, -1, 4}, .leds = {72, 73, 74, 75, 76, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, -1}},
		{.id = 4, .offset_percentage = 0, .invert_order = true, .borders = {13, 12, 3, -1, 5, 14}, .leds = {352, 351, 350, 349, 348, 347, 346, 345, 344, 370, 369, 368, 367, 366, 365, 364, 363, 362, 361, 360, 359, 358, 357, 356, 355, 354, 353, -1}},
		{.id = 5, .offset_percentage = -30, .invert_order = false, .borders = {14, 4, -1, 6, 16, 15}, .leds = {167, 168, 169, 170, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, -1}},
		{.id = 6, .offset_percentage = 0, .invert_order = true, .borders = {5, -1, 1, 18, 17, 16}, .leds = {257, 256, 255, 254, 253, 198, 197, 196, 195, 194, 302, 301, 300, 299, 298, 297, 296, 295, 294, 293, 292, 291, 290, 289, 261, 260, 259, 258, -1}},
		{.id = 7, .offset_percentage = 0, .invert_order = false, .borders = {1, 8, -1, -1, -1, 18}, .leds = {0, 1, 2, 3, 4, 5, 6, 7, 8, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, -1}},
		{.id = 8, .offset_percentage = 0, .invert_order = true, .borders = {2, 9, -1, -1, 7, 1}, .leds = {12, 11, 10, 9, 470, 469, 468, 467, 466, 465, 464, 463, 462, 461, 460, 459, 458, 457, 21, 20, 19, 18, 17, 16, 15, 14, 13, -1}},
		{.id = 9, .offset_percentage = -20, .invert_order = false, .borders = {10, -1, -1, -1, 8, 2}, .leds = {22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 452, 453, 454, 455, 456, -1}},
		{.id = 10, .offset_percentage = 0, .invert_order = true, .borders = {11, -1, -1, 9, 2, 3}, .leds = {53, 52, 51, 50, 429, 428, 427, 426, 425, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, -1}},
		{.id = 11, .offset_percentage = -10, .invert_order = false, .borders = {-1, -1, -1, 10, 3, 12}, .leds = {77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 398, 399, 400, 401, 402, -1}},
		{.id = 12, .offset_percentage = 0, .invert_order = true, .borders = {-1, -1, 11, 3, 4, 13}, .leds = {393, 392, 391, 390, 389, 388, 387, 386, 385, 384, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 397, 396, 395, 394, -1}},
		{.id = 13, .offset_percentage = 5, .invert_order = false, .borders = {-1, -1, 12, 4, 14, -1}, .leds = {113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 375, 376, 377, 378, 379, 380, 381, 382, 383, -1}},
		{.id = 14, .offset_percentage = 0, .invert_order = true, .borders = {-1, 13, 4, 5, 15, -1}, .leds = {338, 337, 336, 335, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 374, 373, 372, 371, 343, 342, 341, 340, 339, -1}},
		{.id = 15, .offset_percentage = 25, .invert_order = false, .borders = {-1, 14, 5, 16, -1, -1}, .leds = {144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 330, 331, 332, 333, 334, -1}},
		{.id = 16, .offset_percentage = 0, .invert_order = true, .borders = {15, 5, 6, 17, -1, -1}, .leds = {188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 306, 305, 304, 303, 193, 192, 191, 190, 189, -1}},
		{.id = 17, .offset_percentage = 40, .invert_order = false, .borders = {16, 6, 18, -1, -1, -1}, .leds = {199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 249, 250, 251, 252, -1}},
		{.id = 18, .offset_percentage = 0, .invert_order = true, .borders = {6, 1, 7, -1, -1, 17}, .leds = {229, 228, 227, 226, 225, 224, 223, 222, 221, 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, -1}}};

size_t num_hexes = sizeof(described_hexes) / sizeof(hex_describer_t);

namespace HexNS
{
	Hexes* setup()
	{
		return Hexes::from_described(described_hexes, num_hexes);
	}
};
